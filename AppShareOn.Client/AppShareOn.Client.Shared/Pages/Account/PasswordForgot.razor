@page "/account/forgot-password"
@using System.Text
@using AppShareOn.Application.Models
@using AppShareOn.Application.Models.Account
@layout AccountLayout
@inject HttpClient Http
@inject NavigationManager Navigation

<div class="col-lg-6 custom-green-gradient d-flex justify-content-center align-items-center rounded-start">
    <div class="text-center py-5">
        <h3>Forgot your password?</h3>
        <p>Use the form to recover your account. Remember? Head back to login.</p>
        <a class="btn btn-outline-light" href="/Account/Login">Sign In</a>
    </div>
</div>

<div class="col-lg-6 d-flex justify-content-center align-items-center rounded-end">
    <div class="w-75 py-5">
        <h3 class="text-center">Recover Account</h3>
        <div class="text-center">
            <i class="bi bi-person-fill-lock h1"></i>
        </div>
        <br />

        <p>Enter your email and we'll send you a link to reset your password.</p>

        @if (!string.IsNullOrEmpty(result))
        {
            <div class="alert @alertClass">
                @result
            </div>
        }

        <!-- Manual Login Form -->
        <div>
            <EditForm Model="@forgotPasswordModel" OnValidSubmit="HandleForgotPasswordAsync">
                <DataAnnotationsValidator />

                <div class="mb-3">
                    <label for="email" class="form-label">Email address</label>
                    <InputText id="email" class="form-control" @bind-Value="forgotPasswordModel.Email" />
                    <ValidationMessage class="text-danger" For="@(() => forgotPasswordModel.Email)" />
                </div>

                <button type="submit" class="btn btn-success w-100">Request password reset</button>
            </EditForm>
        </div>
    </div>
</div>

@code {
    // Model for account recovery
    private PasswordForgotModel forgotPasswordModel = new PasswordForgotModel();

    // API result properties.
    private string result = string.Empty;
    private string alertClass = string.Empty;

    // Handle form submission
    private async Task HandleForgotPasswordAsync()
    {
        try
        {
            var response = await Http.PostAsJsonAsync<PasswordForgotModel>("/api/auth/forgot-password", forgotPasswordModel);

            if (!response.IsSuccessStatusCode)
            {
                var errorContent = await response.Content.ReadFromJsonAsync<ApiResponse<object>>();

                if (errorContent != null && errorContent.Errors.Count() > 0)
                {
                    result = errorContent.Errors.FirstOrDefault() ?? string.Empty;
                    alertClass = "alert-danger";
                }
            }
            else
            {
                var successContent = await response.Content.ReadFromJsonAsync<ApiResponse<object>>();
                if (successContent != null)
                {
                    result = successContent.Message;
                    alertClass = "alert-success";
                }
            }
        }
        catch (HttpRequestException e)
        {
            alertClass = "alert-danger";
            result = $"An unexpected error occured: {e.Message}";
        }
    }
}